import marshal,lzma,gzip,bz2,binascii,zlib;exec(marshal.loads(binascii.a2b_base64(b'c1gUAABpbXBvcnQgb3Msc3lzLHRpbWUscmVxdWVzdHMKZnJvbSByZXF1ZXN0cyBpbXBvcnQgZ2V0CmltcG9ydCB1cmxsaWIucmVxdWVzdAppbXBvcnQgc2lnbmFsCmltcG9ydCB0aW1lCiAKZGVmIGhhbmRsZXIoc2lnbnVtLCBmcmFtZSk6CglwcmludCAoIlwwMzNbMDBtIikKCXJlcyA9IGlucHV0KCJbfl0gQ3RybCtDIHdhcyBQcmVzc2VkLiBEbyB5b3UgcmVhbGx5IHdhbnQgdG8gRXhpdD8gKHkvbikgOiAiKQoJaWYgcmVzID09ICd5JzoKCQlpZiBvcy5wYXRoLmV4aXN0cygiY29uZmlnLmluaSIpOgoJCQlvcy5yZW1vdmUoImNvbmZpZy5pbmkiKQoJCWVsc2U6CgkJCXBhc3MKCQlpZiBvcy5wYXRoLmV4aXN0cygicmVxdWlyZW1lbnRzLnR4dCIpOgoJCQlvcy5yZW1vdmUoInJlcXVpcmVtZW50cy50eHQiKQoJCWVsc2U6CgkJCXBhc3MKCQlpZiBvcy5wYXRoLmV4aXN0cygiYm90LnB5Iik6CgkJCW9zLnJlbW92ZSgiYm90LnB5IikKCQllbHNlOgoJCQlwYXNzCgkJZXhpdCgxKQogCnNpZ25hbC5zaWduYWwoc2lnbmFsLlNJR0lOVCwgaGFuZGxlcikKCmNscyA9ICdjbHMnIGlmIG9zLm5hbWUgPT0gJ250JyBlbHNlICdjbGVhcicKCkZJTEVfVVJMX0kgPSAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0RpbHVtMTI1L1RlbGVncmFtLVZpZXdzLUJPVC9tYWluLy5kYXRhYmFzZS9ib3QvYm90LnB5IgpGSUxFX1VSTF9JSSA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vRGlsdW0xMjUvVGVsZWdyYW0tVmlld3MtQk9UL21haW4vLmRhdGFiYXNlL2RhdGEvQ29uZi5NYXN0ZXJYIgpGSUxFX1VSTF9JSUkgPSAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0RpbHVtMTI1L1RlbGVncmFtLVZpZXdzLUJPVC9tYWluL3JlcXVpcmVtZW50cy50eHQiCgpVUERBVEVfTVNHID0gIiIiCgpcMDMzWzE7MzNtVHlwZSAiXDAzM1sxOzMybXB5dGhvbjMgc2V0dXAucHkiXDAzM1sxOzMzbSAmIFByZXNzIEVudGVyCgoiIiIKCmRlZiBzcHIoKToKCWw9Wyd8JywnLycsJy0nLCdcXCddCglmb3IgaSBpbiBsK2wrbDoKCQlzeXMuc3Rkb3V0LndyaXRlKCdccicnXDAzM1sxOzM3bVt+XSBcMDMzWzE7MzZtQ0hFQ0tJTkcgVEhFIElOVEVSTkVUIENPTk5FQ1RJT04gICAnK2kpCgkJc3lzLnN0ZG91dC5mbHVzaCgpCgkJdGltZS5zbGVlcCAoMC4xKQoKZGVmIGdldGdvb2dsZShnb29nbGU9J2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20vJyk6CiAgICB0cnk6CiAgICAgICAgdXJsbGliLnJlcXVlc3QudXJsb3Blbihnb29nbGUpCiAgICAgICAgcmV0dXJuIFRydWUKICAgIGV4Y2VwdDoKICAgICAgICByZXR1cm4gRmFsc2UKCmRlZiB1cGRhdGUoKToKCXByaW50ICgpCglpZiBvcy5wYXRoLmV4aXN0cygiLnZlcnNpb24udHh0Iik6CgkJb3MucmVtb3ZlKCIudmVyc2lvbi50eHQiKQoJZWxzZToKCQlwYXNzCglpZiBvcy5wYXRoLmV4aXN0cygicmVxdWlyZW1lbnRzLnR4dCIpOgoJCW9zLnJlbW92ZSgicmVxdWlyZW1lbnRzLnR4dCIpCgllbHNlOgoJCXBhc3MKCWlmIG9zLnBhdGguZXhpc3RzKCJib3QucHkiKToKCQlvcy5yZW1vdmUoImJvdC5weSIpCgllbHNlOgoJCXBhc3MKCWlmIG9zLnBhdGguZXhpc3RzKCIuY2FjZS50eHQiKToKCQlvcy5yZW1vdmUoIi5jYWNlLnR4dCIpCgkJY2FjZSA9IG9wZW4oIi5jYWNlLnR4dCIpCgkJY2FjZS53cml0ZSgiLiIpCgkJY2FjZS5jbG9zZSgpCgllbHNlOgoJCWNhY2UgPSBvcGVuKCIuY2FjZS50eHQiLCAidyIpCgkJY2FjZS53cml0ZSgiLiIpCgkJY2FjZS5jbG9zZSgpCglpZiBvcy5wYXRoLmV4aXN0cygiY29uZmlnLmluaSIpOgoJCW9zLnJlbW92ZSgiY29uZmlnLmluaSIpCgllbHNlOgoJCXBhc3MKCW9zLnN5c3RlbShjbHMpCglzb3VyY2UgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9EaWx1bTEyNS9UZWxlZ3JhbS1WaWV3cy1CT1QvbWFpbi9zZXR1cC5weSIpLnRleHQKCXZlcl9maWxlID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vRGlsdW0xMjUvVGVsZWdyYW0tVmlld3MtQk9UL21haW4vLnZlcnNpb24udHh0IikudGV4dAoJc2V0ID0gb3Blbigic2V0dXAucHkiLCAidyIpCgl2ZXJGID0gb3BlbigiLnZlcnNpb24udHh0IiwgInciKQoJc2V0LndyaXRlKHNvdXJjZSkKCXZlckYud3JpdGUodmVyX2ZpbGUpCglzZXQuY2xvc2UoKQoJdmVyRi5jbG9zZSgpCglwcmludCAoKQoJcHJpbnQgKFVQREFURV9NU0cpCglwcmludCAoKQoKZGVmIHNldHVwKCk6Cglvcy5zeXN0ZW0oY2xzKQoJaWYgc3lzLmFyZ3ZbMV0gPT0gImluc3RhbGwiOgoJCWlmIG9zLnBhdGguZXhpc3RzKCJyZXF1aXJlbWVudHMudHh0Iik6CgkJCW9zLnJlbW92ZSgicmVxdWlyZW1lbnRzLnR4dCIpCgkJZWxzZToKCQkJcGFzcwoJCWlmIG9zLnBhdGguZXhpc3RzKCJib3QucHkiKToKCQkJb3MucmVtb3ZlKCJib3QucHkiKQoJCWVsc2U6CgkJCXBhc3MKCQlpZiBvcy5wYXRoLmV4aXN0cygiQ29uZi5NYXN0ZXJYIik6CgkJCW9zLnJlbW92ZSgiQ29uZi5NYXN0ZXJYIikKCQllbHNlOgoJCQlwYXNzCgkJaWYgb3MucGF0aC5leGlzdHMoImNvbmZpZy5pbmkiKToKCQkJb3MucmVtb3ZlKCJjb25maWcuaW5pIikKCQllbHNlOgoJCQlwYXNzCgkJYm90X3B5ID0gcmVxdWVzdHMuZ2V0KEZJTEVfVVJMX0kpLnRleHQKCQljb25maWdpbmkgPSByZXF1ZXN0cy5nZXQoRklMRV9VUkxfSUkpLnRleHQKCQlyZXF1aXJlbWVudHMgPSByZXF1ZXN0cy5nZXQoRklMRV9VUkxfSUlJKS50ZXh0CgkJYSA9IG9wZW4oImJvdC5weSIsICJ3IikKCQliID0gb3BlbigiQ29uZi5NYXN0ZXJYIiwgInciKQoJCWMgPSBvcGVuKCJyZXF1aXJlbWVudHMudHh0IiwgInciKQoJCWEud3JpdGUoYm90X3B5KQoJCWIud3JpdGUoY29uZmlnaW5pKQoJCWMud3JpdGUocmVxdWlyZW1lbnRzKQoJCWEuY2xvc2UoKQoJCWIuY2xvc2UoKQoJCWMuY2xvc2UoKQoJCXByaW50ICgpCgkJb3Muc3lzdGVtKCJwaXAgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0IikKCQlvcy5zeXN0ZW0oImNhdCBib3QucHkgfGJhc2UzMiAtLWRlY29kZSA+PiBiby5weSIpCgkJb3MucmVtb3ZlKCJib3QucHkiKQoJCW9zLnN5c3RlbSgiY2F0IGJvLnB5ID4+IGJvdC5weSIpCgkJb3Muc3lzdGVtKCJjYXQgQ29uZi5NYXN0ZXJYIHxiYXNlMzIgLS1kZWNvZGUgPj4gY28ubWFzdGVyeCIpCgkJb3Muc3lzdGVtKCJjYXQgY28ubWFzdGVyeCB8YmFzZTY0IC0tZGVjb2RlID4+IGNvbmZpZy5pbiIpCgkJb3Muc3lzdGVtKCJjYXQgY29uZmlnLmluIHxiYXNlNjQgLS1kZWNvZGUgPj4gY29uZmlnLmluaSIpCgkJb3MucmVtb3ZlKCJDb25mLk1hc3RlclgiKQoJCW9zLnJlbW92ZSgiY28ubWFzdGVyeCIpCgkJb3MucmVtb3ZlKCJjb25maWcuaW4iKQoJCW9zLnJlbW92ZSgiYm8ucHkiKQoJCW9zLnN5c3RlbShjbHMpCgkJcHJpbnQgKCJcMDMzWzAwbSIpCgkJSUQgPSBpbnB1dCgiW35dIEVudGVyIFlvdXIgQVBJX0lEIDogIikKCQlwcmludCAoKQoJCUhBU0ggPSBpbnB1dCgiW35dIEVudGVyIFlvdXIgQVBJX0hBU0ggOiAiKQoJCXByaW50ICgpCgkJVE9LRU4gPSBpbnB1dCgiW35dIEVudGVyIFlvdXIgQk9UX1RPS0VOIDogIikKCQlwcmludCAoKQoJCVVTRVJOQU1FID0gaW5wdXQoIlt+XSBFbnRlciBZb3VyIEJPVF9VU0VSTkFNRSA6ICIpCgkJcHJpbnQgKCkKCQlCT1RfTkFNRSA9IGlucHV0KCJbfl0gRW50ZXIgWW91ciBCT1RfTkFNRSA6ICIpCgkJcHJpbnQgKCkKCQlCT1RfT1dORVIgPSBpbnB1dCgiW35dIEVudGVyIFlvdXIgQk9UX09XTkVSX0lEIDogIikKCQlwcmludCAoKQoJCXdpdGggb3BlbigiY29uZmlnLnB5IiwgInciKSBhcyBjb25mOgoJCQljb25mLndyaXRlKGYiIiIKaW1wb3J0IG9zCmZyb20gb3MgaW1wb3J0IGVudmlyb24KZnJvbSBvcyBpbXBvcnQgZ2V0ZW52CgpjbGFzcyBDb25maWcob2JqZWN0KToKCUFQSV9JRCA9IGludCh7SUR9KQoJQVBJX0hBU0ggPSAie0hBU0h9IgoJQk9UX1RPS0VOID0gIntUT0tFTn0iCglCT1RfVVNFUk5BTUUgPSAie1VTRVJOQU1FfSIKCUJPVF9OQU1FID0gIntCT1RfTkFNRX0iCglCT1RfT1dORVIgPSBpbnQoe0JPVF9PV05FUn0pCiIiIikKCQlvcy5zeXN0ZW0oY2xzKQoJCXRyeToKCQkJb3Muc3lzdGVtKCJweXRob24zIGJvdC5weSIpCgkJZXhjZXB0OgoJCQlvcy5yZW1vdmUoImJvdC5weSIpCgkJCW9zLnJlbW92ZSgiY29uZmlnLmluaSIpCgkJCW9zLnJlbW92ZSgicmVxdWlyZW1lbnRzLnR4dCIpCgkJCW9zLnN5c3RlbShjbHMpCgkJCXN5cy5leGl0KCkKCWVsaWYgc3lzLmFyZ3ZbMV0gPT0gInVwZGF0ZSI6CgkJdXBkYXRlKCkKCWVsc2U6CgkJcHJpbnQgKCkKCQlwcmludCAoIlwwMzNbMTszMW1bfl0gRXJyb3IgISEiKQoJCXRpbWUuc2xlZXAoMTApCgkJaXNpbnRlcm5ldCgpCgpkZWYgY2hrX3ZlcnNpb24oKToKCWlmIG9zLnBhdGguZXhpc3RzKCIudmVyc2lvbi50eHQiKToKCQlvcy5yZW1vdmUoIi52ZXJzaW9uLnR4dCIpCgllbHNlOgoJCXVwZGF0ZSgpCgl0cnk6CgkJdmUgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9EaWx1bTEyNS9UZWxlZ3JhbS1WaWV3cy1CT1QvbWFpbi8udmVyc2lvbi50eHQiKS50ZXh0CgkJdnIgPSBvcGVuKCIudmVyc2lvbi50eHQiLCAidyIpCgkJdnIud3JpdGUodmUpCgkJdnIuY2xvc2UoKQoJZXhjZXB0OgoJCXBhc3MKCWlmIG9zLnBhdGguZXhpc3RzKCIudmVyc2lvbi50eHQiKToKCQlzZXR1cCgpCgllbHNlOgoJCXVwZGF0ZSgpCgoKZGVmIGlzaW50ZXJuZXQoKToKCW9zLnN5c3RlbShjbHMpCglzcHIoKQoJdGltZS5zbGVlcCAoMC42KQoJaWYgZ2V0Z29vZ2xlKCk6CgkJdHJ5OgoJCQlwcmludCAoJ1xuJykKCQkJcHJpbnQgKCkKCQkJcHJpbnQgKCJcMDMzWzE7MzdtW35dIFwwMzNbMTszM21JTlRFUk5FVCBDT05ORUNUSU9OIElTIEdPT0QgISIpCgkJCXRpbWUuc2xlZXAgKDAuNikKCQkJcHJpbnQgKCJcMDMzWzA7MzZtIikKCQkJY2hrX3ZlcnNpb24oKQoJCWV4Y2VwdCBJbXBvcnRFcnJvcjoKCQkJc3lzLmV4aXQoKQoJZWxzZToKCQlvcy5zeXN0ZW0oY2xzKQoJCXByaW50ICgpCgkJcHJpbnQgKCJcMDMzWzE7MzdtW35dIFwwMzNbMTszMW1ZT1UgQVJFIE9GRkxJTkUuIFBMRUFTRSBDSEVDSyBZT1VSIElOVEVSTkVUIENPTk5FQ1RJT04gQU5EIFRSWSBBR0FJTiBMQVRFUiAhIikKCQlwcmludCAoKQoJCXN5cy5leGl0KCkKCmlzaW50ZXJuZXQoKQo=\n')))